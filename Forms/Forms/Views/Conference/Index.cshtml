@model IndexModel

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <a asp-action="DownloadUsers">Download all users</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ConferenceUser.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ConferenceUser.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ConferenceUser.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ConferenceUser.ConferenceType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ConferenceUser.Avatar)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.GetUsers)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ConferenceType)
                </td>
                <td>
                    @if(item.Avatar == "")
                    {
                        @Html.Raw("No avatar")
                    }
                    else if(item.AvatarUrl != null)
                    {
                        <img class="avatar-img" src="@item.AvatarUrl"></img>
                    }
                    else
                    {
                        <img class="avatar-img" src="~/avatars/@item.Avatar"></img>
                    }
                    
                </td>
                @*<td>
                        @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                        @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                        @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                    </td>*@
            </tr>
        }
    </tbody>
</table>

<form method="get">
    <nav aria-label="Page navigation">
        <ul class="pagination">
            @{
                int previousPage = 0;
                int nextPage = 0;
            }
            @if(Model.CurrentPage == Model.TotalPageCount + 1)
            {
                previousPage = Model.CurrentPage;
                nextPage = Model.CurrentPage;
            }
            else if(Model.CurrentPage == 1)
            {
                previousPage = Model.CurrentPage;
                nextPage = Model.CurrentPage + 1;
            }
            else
            {
                previousPage = Model.CurrentPage - 1;
                nextPage = Model.CurrentPage + 1;
            }
            <li>
                <a href="?page=@previousPage" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            @for (int i = Model.CurrentPage; i < Model.CurrentPage + 10; i++)
            {
                @if(i == Model.CurrentPage)
                {
                    <li class="page-item active"><a href="?page=@i">@i</a></li>
                }
                else
                {
                    <li class="page-item"><a href="?page=@i">@i</a></li>
                }
            }
            <li>
                <a href="?page=@nextPage" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
</form>

@*@model Forms.Models.ConferenceUser*@

@{
    ViewData["Title"] = "Create";
}



<h2>Create</h2>

<h4>ConferenceUser</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" method="POST" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ConferenceUser.FirstName" class="control-label"></label>
                <input asp-for="ConferenceUser.FirstName" class="form-control" />
                <span asp-validation-for="ConferenceUser.FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ConferenceUser.LastName" class="control-label"></label>
                <input asp-for="ConferenceUser.LastName" class="form-control" />
                <span asp-validation-for="ConferenceUser.LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ConferenceUser.Email" class="control-label"></label>
                <input asp-for="ConferenceUser.Email" class="form-control" />
                <span asp-validation-for="ConferenceUser.Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ConferenceUser.ConferenceType" class="control-label"></label>
                <select asp-items="Html.GetEnumSelectList<ConferenceType>()" asp-for="ConferenceUser.ConferenceType" class="form-control">
                    <option value="">Wybierz</option>
                </select>
                @*<span asp-validation-for="ConferenceType" class="text-danger"></span>*@
            </div>
            <div class="form-group">
                <label asp-for="ConferenceUser.Avatar" class="control-label"></label>
                <input asp-for="ConferenceUser.Avatar" class="form-control" type="file" name="avatar" />
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

